/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.60.0
  Forc version: 0.44.0
  Fuel-Core version: 0.20.5
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Enum } from "./common";

export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;
export enum InitializationErrorInput { CannotReinitialize = 'CannotReinitialize', ContractNotInitialized = 'ContractNotInitialized' };
export enum InitializationErrorOutput { CannotReinitialize = 'CannotReinitialize', ContractNotInitialized = 'ContractNotInitialized' };
export enum UserErrorInput { AmountCannotBeZero = 'AmountCannotBeZero', IncorrectAssetSent = 'IncorrectAssetSent', InsufficientBalance = 'InsufficientBalance', RequestAlreadyUsed = 'RequestAlreadyUsed', NotRegistered = 'NotRegistered' };
export enum UserErrorOutput { AmountCannotBeZero = 'AmountCannotBeZero', IncorrectAssetSent = 'IncorrectAssetSent', InsufficientBalance = 'InsufficientBalance', RequestAlreadyUsed = 'RequestAlreadyUsed', NotRegistered = 'NotRegistered' };

export type AddressInput = { value: string };
export type AddressOutput = AddressInput;
export type ClaimedEventInput = { amount: BigNumberish, by: IdentityInput };
export type ClaimedEventOutput = { amount: BN, by: IdentityOutput };
export type ContractIdInput = { value: string };
export type ContractIdOutput = ContractIdInput;
export type RequestedEventInput = { amount: BigNumberish, by: IdentityInput };
export type RequestedEventOutput = { amount: BN, by: IdentityOutput };

interface ContributionPoolAbiInterface extends Interface {
  functions: {
    claim: FunctionFragment;
    constructor: FunctionFragment;
    finalize_claim: FunctionFragment;
    list_repo: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'claim', values: [BigNumberish, BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'constructor', values: [ContractIdInput, ContractIdInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'finalize_claim', values: [BigNumberish, BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'list_repo', values: [string, BigNumberish]): Uint8Array;

  decodeFunctionData(functionFragment: 'claim', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'constructor', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'finalize_claim', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'list_repo', data: BytesLike): DecodedValue;
}

export class ContributionPoolAbi extends Contract {
  interface: ContributionPoolAbiInterface;
  functions: {
    claim: InvokeFunction<[listing_id: BigNumberish, pr_num: BigNumberish], void>;
    constructor: InvokeFunction<[token: ContractIdInput, registration: ContractIdInput], void>;
    finalize_claim: InvokeFunction<[request_id: BigNumberish, pr_num: BigNumberish], void>;
    list_repo: InvokeFunction<[github_repo: string, payable_amount: BigNumberish], void>;
  };
}
